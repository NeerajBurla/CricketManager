@page "/cricketteams"
@inject HttpClient Http
@inject IDataRepository<CricketTeam> teamRepository

@using CricketManager.Models

<h3>Cricket Teams</h3>


<TelerikGrid Data="@theData" Height="500px" Width="1000px" OnDelete="DeleteHandler" ConfirmDelete="true">
    <GridColumns>
        <GridColumn Field="@(nameof(CricketTeam.Logo))">
            <Template>
                @{
                    <a href="@($"/playerlist/{((context as CricketTeam).Name)}")">
                        <img class="rounded" src="@((context as CricketTeam).Logo)" alt="Team Logo" style="width:50%;aspect-ratio:3/2;object-fit:contain" />
                    </a>
                }
            </Template>
        </GridColumn>
        <GridColumn Field="@(nameof(CricketTeam.Name))" Title=" Team Name">
            <Template>
                <a href="@($"/playerlist/{((context as CricketTeam).Name)}")">
                    <span class="span-nav">
                        @((context as CricketTeam).Name)
                    </span>
                </a>
            </Template>
        </GridColumn>
        <GridColumn Field="@(nameof(CricketTeam.NumberofPlayers))" Title=" Number of Players">
            <Template>
                    <span class="span-nav">
                    @((context as CricketTeam).NumberofPlayers)
                    </span>
            </Template>
        </GridColumn>
        <GridCommandColumn>
            <div class="row" style="padding:10px">
                <GridCommandButton Command="Edit" Icon="edit">Edit</GridCommandButton>
                <GridCommandButton Command="Delete" Icon="delete">Delete</GridCommandButton>
            </div>
            <GridCommandButton Command="Save" Icon="save" ShowInEdit="true">Update</GridCommandButton>
            <GridCommandButton Command="Cancel" Icon="cancel" ShowInEdit="true">Cancel</GridCommandButton>

        </GridCommandColumn>
    </GridColumns>

    <DetailTemplate>
        @{
            var team = context as CricketTeam;

            <TelerikGrid Data="@team.Players"
                     Height="300px"
                     Pageable="true"
                     Sortable="true"
                     PageSize="5">
                <GridColumns>
                    <GridColumn Field=@nameof(addplayer.Name) Title="Name" />
                    <GridColumn Field=@nameof(addplayer.BattingOrder) Title="Batting Order" />
                    <GridColumn Field=@nameof(addplayer.Position) Title="Position" />
                </GridColumns>
            </TelerikGrid>
        }
    </DetailTemplate>
</TelerikGrid>
<TelerikButton>
<a href="AddTeam" class="btn btn-primary">Add New Team</a>
</TelerikButton>



@code {
    public List<CricketTeam> theData;

    public List<CricketTeam> detailData;
    public bool WindowVisible { get; set; }


    protected async override Task OnInitializedAsync()
    {
        detailData = new List<CricketTeam>();
        //Code to get all Cricket teams Data
        theData = teamRepository.Get();

        //Code to Count the number of players in each team
        string json = File.ReadAllText("wwwroot/JsonData/aplayer.json");

        var jsonObj = JsonConvert.DeserializeObject<List<addplayer>>(json);
        foreach (var item in theData)
        {
            var playerlist = jsonObj.Where(p => p.TeamName == item.Name);
            item.NumberofPlayers = playerlist.Count().ToString();
        }

        //Code to display the detail of players in each team
        foreach (var item in theData)
        {
            List<addplayer> player = jsonObj.Where(p => p.TeamName == item.Name).ToList();
            item.Players = player;
        }

    }

    public async Task GetGridData()
    {
        theData = teamRepository.Get();
    }

    public async Task DeleteHandler(GridCommandEventArgs args)
    {
        CricketTeam itemToDelete = args.Item as CricketTeam;

        //Code to Delete a Team from Teams List
        teamRepository.Delete(itemToDelete);

        await GetGridData();
    }

}